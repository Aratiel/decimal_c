# compiler
CC = gcc
DEFAULTFLAGS = -std=c11 -g
CFLAGS = $(DEFAULTFLAGS) $(INCLUDE_DIR)

OS = $(shell uname)

# directories
BUILD_DIR = .
LDFLAGS = -L./lib -L./
INCLUDE_DIR = -I./include -I./

# programm dependant parameters
LIB_NAME = s21_decimal.a
SRCS = arithmetics.c convertions.c comparisons.c miscellaneous.c utilities.c lw_utils.c
OBJS = $(SRCS:.c=.o) # autogenerated obj names
LDLIBS =

# directory where html tests are created
TEST_HTML_DIR = ./html_report

.PHONY: all clean rebuild
all: $(LIB_NAME)

rebuild: clean all

clean: 
# clean for compiler
	rm -rf $(BUILD_DIR)/*.o $(BUILD_DIR)/*.a $(BUILD_DIR)/*.so $(BUILD_DIR)/*.graf $(BUILD_DIR)/*.dSYM $(BUILD_DIR)/$(LIB_NAME).exe $(BUILD_DIR)/$(LIB_NAME)
# clean install
	rm -rf ./lib ./include
# clean for tests
	rm -rf $(BUILD_DIR)/*.gcda $(BUILD_DIR)/*.gcno $(BUILD_DIR)/*.gcov $(BUILD_DIR)/*.info $(TEST_HTML_DIR) $(BUILD_DIR)/$(TEST_NAME)

#Make directories
directories:
	mkdir -p ./lib/
	mkdir -p ./include/

# Overriding impicit rule because fuck dem rules, they doesnt work properly
%.o : %.c
	$(CC) $(CFLAGS) -c -o $@ $^ $(LDFLAGS) $(LDLIBS)

#############################################################
#															#
#					Library compilation						#
#															#
#############################################################
# compiles static library
$(LIB_NAME): directories $(OBJS)
	cd $(BUILD_DIR)/
	ar rcs $(LIB_NAME) $(OBJS)
	cp $(LIB_NAME) ./lib/$(LIB_NAME)
	cp s21_decimal.h ./include/s21_decimal.h
	cp lw_utils.h ./include/lw_utils.h
	cp utilities.h ./include/utilities.h
	@echo "library "$(LIB_NAME)" compiled successfully!"

#############################################################
#															#
#					Testing and Covering					#
#															#
#############################################################
# test libraries and linux directives
TEST_LDFLAGS = -lcheck

# name of the test executable
TEST_NAME = test
TEST_SRCS = ./tests/test.c ./tests/tests_arithmetic.c ./tests/tests_comparison.c ./tests/tests_convertion.c ./tests/tests_miscellaneous.c
ifeq ($(OS), Linux)
TEST_LDFLAGS += -lm -lsubunit
endif

# compiles test programm
test: build_test
	$(BUILD_DIR)/$(TEST_NAME)

build_test: $(LIB_NAME)
	$(CC) $(CFLAGS) -o $(BUILD_DIR)/$(TEST_NAME) $(TEST_SRCS) ./lib/$(LIB_NAME) $(LDFLAGS) $(TEST_LDFLAGS)

LCOV_COVERED_SRCS = arithmetics.c convertions.c comparisons.c miscellaneous.c utilities.c

# builds tests with coverage and collects info file for genhtml
lcov: clean
	gcc -std=c11 -g -c -o lw_utils.o lw_utils.c
	$(CC) $(CFLAGS) -o $(BUILD_DIR)/$(TEST_NAME) $(TEST_SRCS) $(LCOV_COVERED_SRCS) lw_utils.o $(LDFLAGS) $(TEST_LDFLAGS) -coverage
	$(BUILD_DIR)/$(TEST_NAME)
	lcov -t $(BUILD_DIR)/$(TEST_NAME) -o $(BUILD_DIR)/$(TEST_NAME).info -c -d $(BUILD_DIR)

# generates html report
gcov_report: lcov
	genhtml $(BUILD_DIR)/$(TEST_NAME).info -o $(TEST_HTML_DIR)

# location of python script for cpplint style check
CPPLINT = ../materials/linters/cpplint.py
#style check for all code in relative folder
check: build_test
ifeq ($(OS), Linux)
	$(MAKE) valgrind
else
	$(MAKE) leaks
endif
	python3 $(CPPLINT) --extensions=c $(BUILD_DIR)/**.c
	python3 $(CPPLINT) --extensions=h $(BUILD_DIR)/**.h

valgrind:
	valgrind -s --trace-children=yes --leak-check=yes --quiet $(BUILD_DIR)/$(TEST_NAME)

leaks:
	CK_FORK=no leaks --atExit -- $(BUILD_DIR)/$(TEST_NAME)